// <auto-generated/>
// The auto-generated tag is used to prevent the properties from being reordered by Rider code reordering.

using Allyaria.Theming.Styles;
using Allyaria.Theming.Types;

namespace Allyaria.Theming.Constants;

/// <summary>Provides strongly typed default style values for Allyaria theming.</summary>
/// <remarks>The order of properties in this class is important for initialization.</remarks>
[ExcludeFromCodeCoverage(Justification = "This class is a library of constant values.")]
public static class StyleDefaults
{
    /// <summary>Default CSS var prefix.</summary>
    public static readonly string VarPrefix = "ary";

    /// <summary>Default border style.</summary>
    public static readonly ThemeString BorderStyle = Constants.BorderStyle.Solid;

    /// <summary>Default font family.</summary>
    public static readonly ThemeString FontFamily = new("system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif");

    /// <summary>Default font style.</summary>
    public static readonly ThemeString FontStyle = Constants.FontStyle.Normal;

    /// <summary>Default font weight.</summary>
    public static readonly ThemeString FontWeight = Constants.FontWeight.Normal;

    /// <summary>Default text alignment.</summary>
    public static readonly ThemeString TextAlign = Constants.TextAlign.Left;

    /// <summary>Default text decoration line.</summary>
    public static readonly ThemeString TextDecorationLine = Constants.TextDecorationLine.None;

    /// <summary>Default text decoration style.</summary>
    public static readonly ThemeString TextDecorationStyle = Constants.TextDecorationStyle.Solid;

    /// <summary>Default text transform.</summary>
    public static readonly ThemeString TextTransform = Constants.TextTransform.None;

    /// <summary>Default vertical alignment.</summary>
    public static readonly ThemeString VerticalAlign = Constants.VerticalAlign.Baseline;

    /// <summary>Default border radius.</summary>
    public static readonly ThemeNumber BorderRadius = Sizing.Size2;

    /// <summary>Default border width.</summary>
    public static readonly ThemeNumber BorderWidth = Sizing.Size0;

    /// <summary>Default font size.</summary>
    public static readonly ThemeNumber FontSize = Sizing.Size3;

    /// <summary>Default letter spacing.</summary>
    public static readonly ThemeNumber LetterSpacing = new("0.5px");

    /// <summary>Default line height.</summary>
    public static readonly ThemeNumber LineHeight = new("1.5");

    /// <summary>Default margin.</summary>
    public static readonly ThemeNumber Margin = Sizing.Size2;

    /// <summary>Default padding.</summary>
    public static readonly ThemeNumber Padding = Sizing.Size3;

    /// <summary>Default background color for dark theme.</summary>
    public static readonly ThemeColor BackgroundColorDark = new(Colors.BlueGrey900);

    /// <summary>Default background color for high-contrast theme.</summary>
    public static readonly ThemeColor BackgroundColorHighContrast = new(Colors.White);

    /// <summary>Default background color for light theme.</summary>
    public static readonly ThemeColor BackgroundColorLight = new(Colors.BlueGrey50);

    /// <summary>Default foreground color for dark theme.</summary>
    public static readonly ThemeColor ForegroundColorDark = new(Colors.BlueGrey50);

    /// <summary>Default foreground color for high-contrast theme.</summary>
    public static readonly ThemeColor ForegroundColorHighContrast = new(Colors.Black);

    /// <summary>Default foreground color for light theme.</summary>
    public static readonly ThemeColor ForegroundColorLight = new(Colors.BlueGrey900);

    /// <summary>Default transparent color.</summary>
    public static readonly ThemeColor Transparent = new(Colors.Transparent);

    /// <summary>Default dark palette.</summary>
    public static readonly Palette PaletteDark = new(
        backgroundColor: BackgroundColorDark,
        foregroundColor: ForegroundColorDark
    );

    /// <summary>Default high-contrast palette.</summary>
    public static readonly Palette PaletteHighContrast = new(
        backgroundColor: BackgroundColorHighContrast,
        foregroundColor: ForegroundColorHighContrast,
        isHighContrast: true
    );

    /// <summary>Default light palette.</summary>
    public static readonly Palette PaletteLight = new(
        backgroundColor: BackgroundColorLight,
        foregroundColor: ForegroundColorLight
    );

    /// <summary>
    /// Default theme instance composed of standard Allyaria borders, spacing, palette variants, and typography. Used as the
    /// baseline theme for components unless explicitly overridden.
    /// </summary>
    public static readonly Theme Theme = new();
}
